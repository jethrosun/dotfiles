# set scroll history to 100,000 lines
set-option -g history-limit 100000

# modern colors
set -g default-terminal "screen-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
# set -ga terminal-overrides ",alacritty:Tc"
set -ag terminal-overrides ",$TERM:RGB"

# unbind the prefix and bind it to Ctrl-a like screen
unbind C-b
set -g prefix C-p
bind C-p send-prefix

bind -r  Space swap-pane

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# more intuitive split keys
bind | split-window -h
bind _ split-window -v


# copy to X clipboard
bind -T copy-mode-vi v send -X begin-selection

# old methods
# -----------
# bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard &> /dev/null'
# bind -T copy-mode-vi Enter send-keys -X cancel

# # solution 1:
# # -----------
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
#
# # shortcut for moving tmux buffer to clipboard
# # useful if you've selected with the mouse
# bind-key -nr C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"


# # solution 2:
# # http://squidarth.com/programming/2018/12/14/tmux-linux.html
# # ----------------------------------------------------------
#
# # For binding 'y' to copy and exiting selection mode
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'
# # For binding 'Enter' to copy and not leave selection mode
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe 'xclip -sel clip -i' '\;'  send -X clear-selection


# solution 3: from arch wiki
# --------------------------

# Vim style
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"


# solution 4:
# https://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard
# ---------------------------------------------------------------------------------------------

# # move x clipboard into tmux paste buffer
# bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
# bind C-y run "tmux save-buffer - | xclip -i"
#
# # or
# bind C-c run "tmux save-buffer - | xclip -selection c"\; display-message "Buffer copied to clipboard"
# bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# copy/paste using vim-style keys
bind Escape copy-mode
unbind p
bind p paste-buffer

# Avoid ESC delay
set -s escape-time 0

# Fix titlebar
set -g set-titles on
set -g set-titles-string "#T"

# VIM mode
set -g mode-keys vi

# Mouse friendly
set -g mouse on

# Move between panes with vi keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

######################
### DESIGN CHANGES ###
######################

# Avoid date/time taking up space
set -g status-right ''
set -g status-right-length 0

# COLOUR (base16)

# default statusbar colors
set-option -g status-style "fg=#999580,bg=#292824"

# default window title colors
set-window-option -g window-status-style "fg=#999580,bg=default"

# active window title colors
set-window-option -g window-status-current-style "fg=#ae9513,bg=default"

# pane border
set-option -g pane-border-style "fg=#292824"
set-option -g pane-active-border-style "fg=#6e6b5e"

# message text
set-option -g message-style "fg=#a6a28c,bg=#292824"

# pane number display
set-option -g display-panes-active-colour "#60ac39"
set-option -g display-panes-colour "#ae9513"

# clock
set-window-option -g clock-mode-colour "#60ac39"

# copy mode highligh
set-window-option -g mode-style "fg=#999580,bg=#6e6b5e"

# bell
set-window-option -g window-status-bell-style "fg=#292824,bg=#d73737"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'Nybkox/tmux-kanagawa'


run '~/.tmux/plugins/tpm/tpm'
